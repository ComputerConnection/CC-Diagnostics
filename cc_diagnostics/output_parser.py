"""Parse diagnostic reports and generate a summary.

This module exposes ``interpret_report`` which inspects a report dictionary
generated by the diagnostics routines. The function looks at key indicators
like available RAM and disk usage to determine if the system is in a healthy
state.

Parameters
----------
report : dict
    Dictionary with at least ``"system"`` and ``"storage"`` keys. ``"system"``
    should contain ``"RAM_GB"`` while ``"storage"`` is expected to provide
    ``"used_percent"`` of the primary drive.

Returns
-------
dict
    A summary dictionary with the following structure:

    ``{"status": "OK" | "WARN", "warnings": list[str], "recommendations": list[str]}``
"""

def interpret_report(report):
    warnings = []
    recommendations = []

    if report["system"].get("RAM_GB", 0) < 8:
        warnings.append("Low Memory")
        recommendations.append("Recommend upgrading RAM")

    if report["storage"].get("used_percent", 0) > 90:
        warnings.append("Disk Almost Full")
        recommendations.append("Free up space or upgrade drive")

    return {
        "status": "WARN" if warnings else "OK",
        "warnings": warnings,
        "recommendations": recommendations,
    }
